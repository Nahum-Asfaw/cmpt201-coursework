#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>

// Pseudocode
// int main(){
//
//  char* runThis
//  printGet("Enter programs to run.\n", &runThis)
//  fork()
//  while(){
//  if (parent){
//    if (waitpid(...) == -1){ printf("Error msg")}
//    }
//  } else {
//    execl(...)
//  }
//
//  return 0;
// }
//

int main() {

  char *line; // implementation taken from lab1 sol
  size_t n = 0;

  char *runThis = NULL; // lab1
  char *saveptr = NULL; // lab1

  while (1) {

    printf("Enter programs to run.\n> ");
    getline(&line, &n, stdin);
    runThis = strtok_r(line, "\n", &saveptr); // lab1

    pid_t pid = fork();
    int wstatus = 0;

    if (pid) {
      if (waitpid(pid, &wstatus, 0) == -1)
        printf("Huh...");

    } else {
      if (execl(runThis, runThis, (char *)NULL) == -1) {
        printf("Exec failure\n"); // I didn't use perror as the example output didn't
                                  // give error info
      }
    }
  }
  return 0; // will never be met
}
